library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
mydf = read.csv( path2csv, stringsAsFactors = FALSE)
?read.csv
path2csv
mydf <- read.csv( path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl-df(mydf)
sf
cran <- tbl-df(mydf).
cran <- tbl-df(mydf)
cran <- tbl_df(mydf)
rm("mydf")
?tbl_df
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(x:size))
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "FR")
filter(cran, country == "LB")
filter(cran, country == "LE")
filter(cran, country == "NG")
filter(cran, country == "VC")
filter(cran, country == "VT")
filter(cran, country == "AR")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500 , r_os == "linux-gnu")
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, r_version == !is.na())
filter(cran, !is.na(r_version))
cran2 = select(cran, size:ip_id)
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, size = size + 1000)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
library(swirl)
swirl()
library(dplyr)
cran = tbl_df(mydf)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(cran, package)
by_package
summarize( by_package, mean(size))
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
max(pack_sum$count)
top_counts <- filter(pack_sum, count>679)
top_counts
head(top_counts, 20)
arrange(top_counts, desc(count))
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique > 465)
top_unique
arrange(top_unique, desc(unique))
submit()
submit()
submit()
submit()
submit()
submit()
submit()
library(swirl)
swirl()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res <- gather(students2, sex_class, count)
res <- gather(students2, sex_class, count, -grade)
res
?seperate()
?seperate
?separate
separate(res, sex_class, c("sex", "class"))
submit()
student3
students3
?gather
submit()
?spread
submit()
submit()
submit()
submit()
submit()
submit()
submit()
extract_numeric("class5")
?mutate
library(plyr)
?mutate
submit()
submit()
submit()
?mutate
submit()
submit()
submit()
students4
submit
submit()
submit()
submit()
submit()
passed
failed
passed <- mutate(passed, status = "passed")
failed <- mutate(failed, status = "failed")
rbind_list(passed, failed)
sat
?select
?contains
select(sat, contains("total"))
select(sat, !contains("total"))
select(sat, -contains("total"))
gather(select(sat, -contains("total")), part_sex, count, -score_range)
?separate
submit()
submit()
submit()
wd()
getwd()
setwd("C:/Users/Toshiba/Desktop")
getwd()
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
head(NEI)
summary(NEI)
str(NEI)
max(NEI$Emissions)
max(NEI$Emissions != 646952)
max(NEI$Emissions != c(646952, 10 )
)
max(NEI$Emissions != c(646952, 1) )
max(NEI$Emissions != 646952, NEI$Emissions != 1)
min(NEI$Emissions != 646952)
min(NEI$Emissions)
NEI$Emissions == 0
head(NEI)
unique(NEI$scc)
sum(NEI$Emissions)
?sum
library(dplr)
library(dprl)
library()
library(dplyr)
library(ddply)
by_year <- summarize(NEI,)
hea(NEI)
head(NEI)
NEI %>% select(SCC, Emissions, year)
head(NEI)
part1 <- NEI %>% select(SCC, Emissions, year)
head(part1)
head(NEI)
part1 <- NEI %>% select(SCC, Emissions, year) %>% group_by(year)
head(part1)
summarise(part1, tot = sum(Emissions), unique(year))
unique(NEI$year)
summarise(part1, tot = sum(Emissions)
)
par(mfrow = c(1,1))
plot(part1$year, part1$tot)
source('C:/Users/Toshiba/Desktop/plot1.r')
plot(part1$year, part1$tot_Em,
type="l",                              #type = line
xlab="Year",                           #x-axis label
ylab="Total Emissions")
plot(part1$year, part1$tot_Em,
type=2,                              #type = line
xlab="Year",                           #x-axis label
ylab="Total Emissions")
plot(part1$year, part1$tot_Em,
type="l",                              #type = line
xlab="Year",                           #x-axis label
ylab="Total Emissions")                #y-axis label
dev.copy(png, file = "plot1.png")
dev.off()
NEI <- readRDS("summarySCC_PM25.rds")
balt <- NEI[NEI$fips == 24510, ]
balt
head(balt)
source('C:/Users/Toshiba/Desktop/plot2.r')
source('C:/Users/Toshiba/Desktop/plot2.r')
source('C:/Users/Toshiba/Desktop/plot2.r')
head(Bal_City)
part3 <- Bal_City %>% select(Emissions, type, year) %>% group_by(type) %>% summarise(tot_Em = sum(Emissions))
part3
part3 <- Bal_City %>% select(Emissions, type, year) %>% group_by(type, year) %>% summarise(tot_Em = sum(Emissions))
part3
part2$type == "ON-ROAD"
part3$type == "ON-ROAD"
part3 <- Bal_City %>% select(Emissions, type, year) %>% group_by(type, year) %>% summarise(tot_Em = sum(Emissions))
part3
unique(part3$type)
types <- unique(part3$type)
types[1]
for(i in types) {print i}
for(i in types) print i
for(i in 1:3) print i
for(i in 1:3){} print i
for(i in 1:3){
print i}
for(i in 1:3){
a=i+1
}
a
for(i in types){
print(i)
}
plot(part3$year == "NON-ROAD", part3$tot_Em,
type="l",                              #type = line
xlab="Year",                           #x-axis label
ylab="Emissions in Baltimore City")    #y-axis label
plot(part3$year[part3$type == "NON-ROAD"], part3$tot_Em[part3$type == "NON-ROAD"],
type="l",                              #type = line
xlab="Year",                           #x-axis label
ylab="non-road Emissions in Baltimore City")    #y-axis label
i
print(i, " hello")
print(i " hello")
print(i)
print(i), print("hello")
library(ggplot2)
for(i in types) {
plot(part3$year[part3$type == i], part3$tot_Em[part3$type == i],
type="l",                              #type = line
xlab="Year",                           #x-axis label
ylab="Emissions in Baltimore City")    #y-axis label
}
g <- ggplot(part3, aes(year, Emissions))
g + geom_point()
part3
g <- ggplot(part3, aes(year, tot_Em))
g + geom_point()
g + geom_point(aes(color = type))
g + geom_point(aes(color = type), size = 4)
g + geom_line(aes(color = type))
g + geom_line(aes(color = type), size = 3)
g + geom_line(aes(color = type), size = 2)
g + geom_line(aes(color = type), size = 1)
source('C:/Users/Toshiba/Desktop/plot3.r')
p
source('C:/Users/Toshiba/Desktop/plot3.r')
head(SCC)
SCC <- readRDS("Source_Classification_Code.rds")
SCC
head(SCC)
names(SCC)
SCC$Short.Name
SCC$Short.Name[grepl("Coal", SCC$Short.Name)]
names(SCC)
SCC$SSC[grepl("Coal", SCC$Short.Name)]
head(SCC[grepl("Coal", SCC$Short.Name)])
names(SCC)
grepl("Coal", SCC$Short.Name)
SCC$SCC
SCC$SCC[grepl("Coal", SCC$Short.Name)]
head(NEI)
summary(NEI)
str(NEI)
Coal_Comb <- NEI[NEI$SCC %in% keep, ]
keep <- SCC$SCC[grepl("Coal", SCC$Short.Name)]
Coal_Comb <- NEI[NEI$SCC %in% keep, ]
str(Coal_Comb)
head(Coal_Comb)
source('C:/Users/Toshiba/Desktop/plot4.r')
source('C:/Users/Toshiba/Desktop/plot4.r')
source('C:/Users/Toshiba/Desktop/plot4.r')
g <- ggplot(part4, aes(year, tot_Em))
p <- g +
geom_line(size = 1) +
labs(x = "Year", y = "Emissions from Coal Combustion-related sources")
ggsave(filename = "plot4.png", plot = p)
head(SCC)
SCC$Short.Name
grepl("Vehicle", SCC$Short.Name)
source('C:/Users/Toshiba/Desktop/plot5.r')
head(Mot_Vehicle)
source('C:/Users/Toshiba/Desktop/plot5.r')
source('C:/Users/Toshiba/Desktop/plot6.r')
source('C:/Users/Toshiba/Desktop/plot6.r')
data
SCC[SCC$fips %in% c(06037), ]
SCC[SCC$fips %in% c(24510), ]
SCC[SCC$fips == 06037, ]
head(Mot_Vehicle)
data
Mot_Vehicle[Mot_Vehicle$fips %in% c(24510, 06037), ]
Mot_Vehicle[Mot_Vehicle$fips %in% c(06037), ]
NEI[NEI$fips %in% c(06037), ]
NEI[NEI$fips %in% c(24510), ]
NEI[NEI$fips %in% c("06037"), ]
NEI[NEI$fips %in% c("24510"), ]
source('C:/Users/Toshiba/Desktop/plot6.r')
data
data$fips[data$fips == "06037"] <- "Los Angeles County, California"
data
source('C:/Users/Toshiba/Desktop/plot6.r')
